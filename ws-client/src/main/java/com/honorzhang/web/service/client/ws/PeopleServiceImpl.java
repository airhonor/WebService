
package com.honorzhang.web.service.client.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 * @author honorzhang
 */
@WebServiceClient(name = "PeopleServiceImpl", targetNamespace = "http://service.people.com/wsdl", wsdlLocation = "http://127.0.0.1:8099/PeopleServiceImpl/dao?wsdl")
public class PeopleServiceImpl
        extends Service {

    private final static URL PEOPLESERVICEIMPL_WSDL_LOCATION;
    private final static WebServiceException PEOPLESERVICEIMPL_EXCEPTION;
    private final static QName PEOPLESERVICEIMPL_QNAME = new QName("http://service.people.com/wsdl", "PeopleServiceImpl");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:8099/PeopleServiceImpl/dao?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PEOPLESERVICEIMPL_WSDL_LOCATION = url;
        PEOPLESERVICEIMPL_EXCEPTION = e;
    }

    public PeopleServiceImpl() {
        super(__getWsdlLocation(), PEOPLESERVICEIMPL_QNAME);
    }

    public PeopleServiceImpl(WebServiceFeature... features) {
        super(__getWsdlLocation(), PEOPLESERVICEIMPL_QNAME, features);
    }

    public PeopleServiceImpl(URL wsdlLocation) {
        super(wsdlLocation, PEOPLESERVICEIMPL_QNAME);
    }

    public PeopleServiceImpl(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PEOPLESERVICEIMPL_QNAME, features);
    }

    public PeopleServiceImpl(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PeopleServiceImpl(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns PeopleService
     */
    @WebEndpoint(name = "dao")
    public PeopleService getDao() {
        return super.getPort(new QName("http://service.people.com/wsdl", "dao"), PeopleService.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns PeopleService
     */
    @WebEndpoint(name = "dao")
    public PeopleService getDao(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.people.com/wsdl", "dao"), PeopleService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PEOPLESERVICEIMPL_EXCEPTION != null) {
            throw PEOPLESERVICEIMPL_EXCEPTION;
        }
        return PEOPLESERVICEIMPL_WSDL_LOCATION;
    }

}
